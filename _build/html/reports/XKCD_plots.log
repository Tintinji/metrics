Traceback (most recent call last):
  File "/opt/anaconda3/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/opt/anaconda3/lib/python3.8/site-packages/nbclient/client.py", line 1112, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/anaconda3/lib/python3.8/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/anaconda3/lib/python3.8/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/opt/anaconda3/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/opt/anaconda3/lib/python3.8/site-packages/nbclient/client.py", line 553, in async_execute
    await self.async_execute_cell(
  File "/opt/anaconda3/lib/python3.8/site-packages/nbclient/client.py", line 857, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/opt/anaconda3/lib/python3.8/site-packages/nbclient/client.py", line 760, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from IPython.display import Image
Image('http://jakevdp.github.com/figures/xkcd_version.png')
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mHTTPError[0m                                 Traceback (most recent call last)
[0;32m<ipython-input-1-8ad8cb77ad16>[0m in [0;36m<module>[0;34m[0m
[1;32m      1[0m [0;32mfrom[0m [0mIPython[0m[0;34m.[0m[0mdisplay[0m [0;32mimport[0m [0mImage[0m[0;34m[0m[0;34m[0m[0m
[0;32m----> 2[0;31m [0mImage[0m[0;34m([0m[0;34m'http://jakevdp.github.com/figures/xkcd_version.png'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m
[0;32m/opt/anaconda3/lib/python3.8/site-packages/IPython/core/display.py[0m in [0;36m__init__[0;34m(self, data, url, filename, format, embed, width, height, retina, unconfined, metadata)[0m
[1;32m   1222[0m         [0mself[0m[0;34m.[0m[0mretina[0m [0;34m=[0m [0mretina[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1223[0m         [0mself[0m[0;34m.[0m[0munconfined[0m [0;34m=[0m [0munconfined[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1224[0;31m         super(Image, self).__init__(data=data, url=url, filename=filename, 
[0m[1;32m   1225[0m                 metadata=metadata)
[1;32m   1226[0m [0;34m[0m[0m

[0;32m/opt/anaconda3/lib/python3.8/site-packages/IPython/core/display.py[0m in [0;36m__init__[0;34m(self, data, url, filename, metadata)[0m
[1;32m    628[0m             [0mself[0m[0;34m.[0m[0mmetadata[0m [0;34m=[0m [0;34m{[0m[0;34m}[0m[0;34m[0m[0;34m[0m[0m
[1;32m    629[0m [0;34m[0m[0m
[0;32m--> 630[0;31m         [0mself[0m[0;34m.[0m[0mreload[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    631[0m         [0mself[0m[0;34m.[0m[0m_check_data[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    632[0m [0;34m[0m[0m

[0;32m/opt/anaconda3/lib/python3.8/site-packages/IPython/core/display.py[0m in [0;36mreload[0;34m(self)[0m
[1;32m   1254[0m         [0;34m"""Reload the raw data from file or URL."""[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1255[0m         [0;32mif[0m [0mself[0m[0;34m.[0m[0membed[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1256[0;31m             [0msuper[0m[0;34m([0m[0mImage[0m[0;34m,[0m[0mself[0m[0;34m)[0m[0;34m.[0m[0mreload[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1257[0m             [0;32mif[0m [0mself[0m[0;34m.[0m[0mretina[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1258[0m                 [0mself[0m[0;34m.[0m[0m_retina_shape[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/anaconda3/lib/python3.8/site-packages/IPython/core/display.py[0m in [0;36mreload[0;34m(self)[0m
[1;32m    658[0m             [0;31m# Deferred import[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m    659[0m             [0;32mfrom[0m [0murllib[0m[0;34m.[0m[0mrequest[0m [0;32mimport[0m [0murlopen[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 660[0;31m             [0mresponse[0m [0;34m=[0m [0murlopen[0m[0;34m([0m[0mself[0m[0;34m.[0m[0murl[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    661[0m             [0mdata[0m [0;34m=[0m [0mresponse[0m[0;34m.[0m[0mread[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    662[0m             [0;31m# extract encoding from header, if there is one:[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/anaconda3/lib/python3.8/urllib/request.py[0m in [0;36murlopen[0;34m(url, data, timeout, cafile, capath, cadefault, context)[0m
[1;32m    220[0m     [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    221[0m         [0mopener[0m [0;34m=[0m [0m_opener[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 222[0;31m     [0;32mreturn[0m [0mopener[0m[0;34m.[0m[0mopen[0m[0;34m([0m[0murl[0m[0;34m,[0m [0mdata[0m[0;34m,[0m [0mtimeout[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    223[0m [0;34m[0m[0m
[1;32m    224[0m [0;32mdef[0m [0minstall_opener[0m[0;34m([0m[0mopener[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/anaconda3/lib/python3.8/urllib/request.py[0m in [0;36mopen[0;34m(self, fullurl, data, timeout)[0m
[1;32m    529[0m         [0;32mfor[0m [0mprocessor[0m [0;32min[0m [0mself[0m[0;34m.[0m[0mprocess_response[0m[0;34m.[0m[0mget[0m[0;34m([0m[0mprotocol[0m[0;34m,[0m [0;34m[[0m[0;34m][0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    530[0m             [0mmeth[0m [0;34m=[0m [0mgetattr[0m[0;34m([0m[0mprocessor[0m[0;34m,[0m [0mmeth_name[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 531[0;31m             [0mresponse[0m [0;34m=[0m [0mmeth[0m[0;34m([0m[0mreq[0m[0;34m,[0m [0mresponse[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    532[0m [0;34m[0m[0m
[1;32m    533[0m         [0;32mreturn[0m [0mresponse[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/anaconda3/lib/python3.8/urllib/request.py[0m in [0;36mhttp_response[0;34m(self, request, response)[0m
[1;32m    638[0m         [0;31m# request was successfully received, understood, and accepted.[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m    639[0m         [0;32mif[0m [0;32mnot[0m [0;34m([0m[0;36m200[0m [0;34m<=[0m [0mcode[0m [0;34m<[0m [0;36m300[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 640[0;31m             response = self.parent.error(
[0m[1;32m    641[0m                 'http', request, response, code, msg, hdrs)
[1;32m    642[0m [0;34m[0m[0m

[0;32m/opt/anaconda3/lib/python3.8/urllib/request.py[0m in [0;36merror[0;34m(self, proto, *args)[0m
[1;32m    567[0m         [0;32mif[0m [0mhttp_err[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    568[0m             [0margs[0m [0;34m=[0m [0;34m([0m[0mdict[0m[0;34m,[0m [0;34m'default'[0m[0;34m,[0m [0;34m'http_error_default'[0m[0;34m)[0m [0;34m+[0m [0morig_args[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 569[0;31m             [0;32mreturn[0m [0mself[0m[0;34m.[0m[0m_call_chain[0m[0;34m([0m[0;34m*[0m[0margs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    570[0m [0;34m[0m[0m
[1;32m    571[0m [0;31m# XXX probably also want an abstract factory that knows when it makes[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/anaconda3/lib/python3.8/urllib/request.py[0m in [0;36m_call_chain[0;34m(self, chain, kind, meth_name, *args)[0m
[1;32m    500[0m         [0;32mfor[0m [0mhandler[0m [0;32min[0m [0mhandlers[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    501[0m             [0mfunc[0m [0;34m=[0m [0mgetattr[0m[0;34m([0m[0mhandler[0m[0;34m,[0m [0mmeth_name[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 502[0;31m             [0mresult[0m [0;34m=[0m [0mfunc[0m[0;34m([0m[0;34m*[0m[0margs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    503[0m             [0;32mif[0m [0mresult[0m [0;32mis[0m [0;32mnot[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    504[0m                 [0;32mreturn[0m [0mresult[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/anaconda3/lib/python3.8/urllib/request.py[0m in [0;36mhttp_error_default[0;34m(self, req, fp, code, msg, hdrs)[0m
[1;32m    647[0m [0;32mclass[0m [0mHTTPDefaultErrorHandler[0m[0;34m([0m[0mBaseHandler[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    648[0m     [0;32mdef[0m [0mhttp_error_default[0m[0;34m([0m[0mself[0m[0;34m,[0m [0mreq[0m[0;34m,[0m [0mfp[0m[0;34m,[0m [0mcode[0m[0;34m,[0m [0mmsg[0m[0;34m,[0m [0mhdrs[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 649[0;31m         [0;32mraise[0m [0mHTTPError[0m[0;34m([0m[0mreq[0m[0;34m.[0m[0mfull_url[0m[0;34m,[0m [0mcode[0m[0;34m,[0m [0mmsg[0m[0;34m,[0m [0mhdrs[0m[0;34m,[0m [0mfp[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    650[0m [0;34m[0m[0m
[1;32m    651[0m [0;32mclass[0m [0mHTTPRedirectHandler[0m[0;34m([0m[0mBaseHandler[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;31mHTTPError[0m: HTTP Error 404: Not Found
HTTPError: HTTP Error 404: Not Found

